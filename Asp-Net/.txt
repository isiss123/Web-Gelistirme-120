                    PROYEKTLER
Main -> Main.Business -> Main.Data

Mainden ( internetden ) gelen meluamat Main.Business-de verilen qaydalara uygun olaraq yoxlanildiqdan sonra Main.Data-a gonderilerek Database-e qeyd edilir


launch.json :"env": {
    "ASPNETCORE_ENVIRONMENT": "Development"  
},
Development  : gelistirme bölümündə olanda yazilir
Production   : yayinlandiginda yazilir


----------------------------------------------
View -e melumat gonderme methodlari :
                1:    ViewBag.Category = "telefon "  istifade  = @ViewBag.Category  (ViewBag.vereceyimiz_ad)
                2:    ViewData["Category"] = "telefon" istifade = @ViewData["Category"] (ViewBag["vereceyimiz_ad"])
                3:    view(product)   istifade = html seyfesinde en ustde @model Main.Model.Product  = product yarandigi 
                classin yolu 
                4:    TempData["message"] = "yeni mehsul" istifade = ViewData kimidir ferq ise ViewData-nin yalniz aid oldugu actionda islemesi TempData-nin ise yaranmis oldugu action-un yonlendirdiyi action-da da islemesi

View/Shared qovlugu butun CONTOLLER-den elcatilandir
Partial view : html seyfesinde bir bolum birden cox seyfede isledilirse hamisini eyni yerden idare etmek ucun yaradilir

_ViewStart.cshtml   : seyfeler basladigi anda icersinde qeyd olunan funksiyalari istifade edir



etiket

[HttpGet] // her bir seyfede (Index,List,Details) isleyir yazmasaqda olar
[HttpPost] // hecbir seyfede islemir. Islemesi ucun yazmaliyiq
ModelState.IsValid  : melumatlarin VALIDATION-a uygun olaraq girilmesi  (true/false)

ENTITY yaratmaq ucun 
dotnet new classlib -o ...





QOVLUQLAR

Abstract   - Interface oldugu qovluq
Concrete   - Interfacei esas goturerek yaranan


                ESAS PROJENI GOSTERME

dotnet ef migrations add InitialCreate --startup-project ../Main
dotnet ef database update --startup-project ../Main









		CLIENT VALIDATION
npm install jquery-validation
npm install jquery-validation-unobtrusive





